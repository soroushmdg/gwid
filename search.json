[{"path":"https://soroushmdg.github.io/gwid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 gwid authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://soroushmdg.github.io/gwid/articles/my-vignette.html","id":"gwid","dir":"Articles","previous_headings":"","what":"gwid","title":"gwid","text":"GWID (Genome Wide Identity Descent) R-package designed analysis IBD (Identity Descent) data, discover rare alleles (susceptibility regions) associated case-control phenotype. Although Genome Wide Association Studies (GWAS) successfully reveal numerous common variants linked diseases, exhibit lack power identify rare alleles. address limitation, developed pipeline employs IBD data (output refined-IBD software). methodology encompasses sequential process analyzing aforementioned data within isolated populations. primary objective approach enhance sensitivity variant detection utilizing information genetically related individuals, thereby facilitating identification causal variants. overall representation pipeline visually depicted following figure. gwid pipeline","code":""},{"path":"https://soroushmdg.github.io/gwid/articles/my-vignette.html","id":"usage","dir":"Articles","previous_headings":"gwid","what":"Usage","title":"gwid","text":"gwid package receives four types inputs: genotype file, IBD file, haplotype file, phenotype file. genotype data derived output SNPRelate package form gds file. IBD file takes form tabulated data produced Refined IBD software. Haplotype file comes output Beagle, phenotype data represented using R list.","code":""},{"path":"https://soroushmdg.github.io/gwid/articles/my-vignette.html","id":"installation","dir":"Articles","previous_headings":"gwid","what":"Installation","title":"gwid","text":"can install development version gwid GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"soroushmdg/gwid\")"},{"path":"https://soroushmdg.github.io/gwid/articles/my-vignette.html","id":"example","dir":"Articles","previous_headings":"gwid","what":"Example","title":"gwid","text":"demonstrated key functionalities gwid using rheumatoid arthritis (RA) GWAS dataset. dataset consisted DNA samples collected 478 individuals diagnosed rheumatoid arthritis (RA) control group 1,434 individuals without RA. Genotyping performed using Illumina Infinium array. samples obtained genetically homogeneous population central Wisconsin exhibiting elevated relatedness structure. size data large, use pggyback package upload download data github repository.","code":"# install.packages(\"piggyback\") piggyback::pb_download(repo = \"soroushmdg/gwid\",             tag = \"v0.0.1\",             dest = tempdir()) ibd_data_file <- paste0(tempdir(), \"//chr3.ibd\") genome_data_file <- paste0(tempdir(), \"//chr3.gds\") phase_data_file <- paste0(tempdir(), \"//chr3.vcf\") case_control_data_file <- paste0(tempdir(), \"//case-cont-RA.withmap.Rda\")"},{"path":"https://soroushmdg.github.io/gwid/articles/my-vignette.html","id":"input","dir":"Articles","previous_headings":"gwid > Example","what":"Input","title":"gwid","text":"code explain input data files individually. case_control object class caco phenotype information. snp_data_gds object class gwas read output SNPRelate package, use package fast efficient. haplotype_data object class phase haplotype data. ibd_data object gwid class IBD information.","code":"library(gwid)  # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character #groups in the study case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\"  # read SNP data (use SNPRelate to convert it to gds) and count number of #minor alleles   snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file,                                  caco = case_control,                                  gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\" head(snp_data_gds$snps) # it has information about counts of minor alleles  #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 #in each location.  # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,                                     caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911  # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,                              gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location  #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44"},{"path":"https://soroushmdg.github.io/gwid/articles/my-vignette.html","id":"plot-method","dir":"Articles","previous_headings":"gwid > Example","what":"plot method","title":"gwid","text":"plot function can applied gwid class display counts IBD Single SNP among case control groups. utilizing ly=TRUE parameter, user option transform plot plotly object, facilitating interactive exploration entire chromosome specific regions interest use snp_start snp_end parameters. Additionally, y parameter enables inclusion specific groups subjects consideration.   utilization fisher_test method, becomes possible calculate p-values within chosen regions. p-values help assess whether noteworthy differences counts case control groups.  haplotype_structure method can utilized extract haplotypes regions exhibit IBD patterns sliding window manner. w length sliding window haplotype_frequency method can employed extract count structures, can plotted window.","code":"# plot count of IBD in chromosome 3 plot(ibd_data,      y = c(\"cases\",\"cont1\"),      ly = FALSE) # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,      y = c(\"cases\",\"cont1\"),      snp_start = 117026294,      snp_end = 122613594,      ly = FALSE) model_fisher <- gwid::fisher_test(ibd_data,                                   case_control,                                   reference = \"cases\",                                              snp_start = 117026294,                                   snp_end = 122613594)  class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\"  plot(model_fisher,       y = c(\"cases\",\"cont1\"),      ly = FALSE) hap_str <- gwid::haplotype_structure(ibd_data,                                      phase = haplotype_data,                                      w = 10,                                      snp_start = 117026294,                                      snp_end = 122613594) class(hap_str) #> [1] \"haplotype_structure\" \"data.table\"          \"data.frame\"  hap_str[sample(1:nrow(hap_str),size = 5),] # structures column  #>    case_control   snp_pos window_number                     smp structures #>          <fctr>     <num>         <int>                  <char>     <char> #> 1:        cont2 118942956           213    3267209-1-0238039064 0001000000 #> 2:        cont1 121353254           549 MC.AMD123744@0123890953 1000000000 #> 3:        cont1 119150089           251    4276404-1-0238096520 1010000000 #> 4:        cases 121202345           494    MC.157761@1075680606 0000000000 #> 5:        case1 120845812           469 MC.AMD115696@0123861293 0000000000 #have haplotype of length w=10 haplo_freq <- gwid::haplotype_frequency(hap_str) # plot haplotype counts in first window (nwin=1).  plot(haplo_freq,    y = c(\"cases\", \"cont1\"),    plot_type = \"haplotype_structure_frequency\",    nwin = 1, type = \"version1\",    ly = FALSE  )"},{"path":"https://soroushmdg.github.io/gwid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Soroush Mahmoudiandehkordi. Author, maintainer. Steven Schrodi. Author. Mehdi Maadooliat. Author.","code":""},{"path":"https://soroushmdg.github.io/gwid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mahmoudiandehkordi S, Schrodi S, Maadooliat M (2024). gwid: Genome-Wide Identity--Descent. R package version 0.1.0, https://soroushmdg.github.io/gwid/, https://github.com/soroushmdg/gwid.","code":"@Manual{,   title = {gwid: Genome-Wide Identity-by-Descent},   author = {Soroush Mahmoudiandehkordi and Steven Schrodi and Mehdi Maadooliat},   year = {2024},   note = {R package version 0.1.0, https://soroushmdg.github.io/gwid/},   url = {https://github.com/soroushmdg/gwid}, }"},{"path":"https://soroushmdg.github.io/gwid/index.html","id":"gwid","dir":"","previous_headings":"","what":"Genome-Wide Identity-by-Descent","title":"Genome-Wide Identity-by-Descent","text":"GWID (Genome Wide Identity Descent) R-package designed analysis IBD (Identity Descent) data, discover rare alleles (susceptibility regions) associated case-control phenotype. Although Genome Wide Association Studies (GWAS) successfully reveal numerous common variants linked diseases, exhibit lack power identify rare alleles. address limitation, developed pipeline employs IBD data (output refined-IBD software). methodology encompasses sequential process analyzing aforementioned data within isolated populations. primary objective approach enhance sensitivity variant detection utilizing information genetically related individuals, thereby facilitating identification causal variants. overall representation pipeline visually depicted following figure. gwid pipeline","code":""},{"path":"https://soroushmdg.github.io/gwid/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Genome-Wide Identity-by-Descent","text":"gwid package receives four types inputs: genotype file, IBD file, haplotype file, phenotype file. genotype data derived output SNPRelate package form gds file. IBD file takes form tabulated data produced Refined IBD software. Haplotype file comes output Beagle, phenotype data represented using R list.","code":""},{"path":"https://soroushmdg.github.io/gwid/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Genome-Wide Identity-by-Descent","text":"can install development version gwid GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"soroushmdg/gwid\")"},{"path":"https://soroushmdg.github.io/gwid/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Genome-Wide Identity-by-Descent","text":"demonstrated key functionalities gwid using rheumatoid arthritis (RA) GWAS dataset. dataset consisted DNA samples collected 478 individuals diagnosed rheumatoid arthritis (RA) control group 1,434 individuals without RA. Genotyping performed using Illumina Infinium array. samples obtained genetically homogeneous population central Wisconsin exhibiting elevated relatedness structure. size data large, use pggyback package upload download data github repository.","code":"# install.packages(\"piggyback\") piggyback::pb_download(repo = \"soroushmdg/gwid\",             tag = \"v0.0.1\",             dest = tempdir()) ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\")"},{"path":"https://soroushmdg.github.io/gwid/index.html","id":"input","dir":"","previous_headings":"Example","what":"Input","title":"Genome-Wide Identity-by-Descent","text":"code explain input data files individually. case_control object class caco phenotype information. snp_data_gds object class gwas read output SNPRelate package, use package fast efficient. haplotype_data object class phase haplotype data. ibd_data object gwid class IBD information.","code":"library(gwid) #>  #> Attaching package: 'gwid' #> The following objects are masked from 'package:base': #>  #>     print, subset  # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\"  # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles   snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file,caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\" head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #>    snp_pos case_control value #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646  # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911  # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1 V2                      V3 V4 V5        V6 #>      1: MC.AMD127769@0123889787  2    MC.160821@1075679055  1  3  32933295 #>      2: MC.AMD127769@0123889787  1 MC.AMD107154@0123908746  1  3  29995340 #>      3: MC.AMD127769@0123889787  2    9474283-1-0238040187  1  3  34165785 #>      4: MC.AMD127769@0123889787  1    MC.159487@1075679208  2  3  21526766 #>      5:    MC.163045@1082086165  2    MC.160470@1075679095  1  3  11822616 #>     ---                                                                    #> 377560:    1492602-1-0238095971  2    2235472-1-0238095471  2  3 194785443 #> 377561:    4618455-1-0238095900  2    3848034-1-0238094219  1  3 190235788 #> 377562:    MC.160332@1075641581  2    9630188-1-0238038787  2  3 184005719 #> 377563: MC.AMD122238@0124011436  2    MC.159900@1076254946  1  3 181482803 #> 377564: MC.AMD105910@0123907456  1    7542312-1-0238039298  1  3 182440135 #>                V7   V8    V9 #>      1:  34817627 3.26 1.884 #>      2:  31752607 4.35 1.757 #>      3:  35898774 6.36 1.733 #>      4:  23162240 8.71 1.635 #>      5:  13523010 5.29 1.700 #>     ---                      #> 377560: 196328849 4.92 1.543 #> 377561: 192423862 7.77 2.188 #> 377562: 186184328 5.95 2.179 #> 377563: 184801115 3.58 3.318 #> 377564: 183972729 3.03 1.533 ibd_data$res # count number of IBD for each SNP location  #>           snp_pos case_control value #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44"},{"path":"https://soroushmdg.github.io/gwid/index.html","id":"plot-method","dir":"","previous_headings":"Example","what":"plot method","title":"Genome-Wide Identity-by-Descent","text":"plot function can applied gwid class display counts IBD Single SNP among case control groups. utilizing ly=TRUE parameter, user option transform plot plotly object, facilitating interactive exploration entire chromosome specific regions interest use snp_start snp_end parameters. Additionally, y parameter enables inclusion specific groups subjects consideration.   utilization fisher_test method, becomes possible calculate p-values within chosen regions. p-values help assess whether noteworthy differences counts case control groups.  haplotype_structure method can utilized extract haplotypes regions exhibit IBD patterns sliding window manner. w length sliding window haplotype_frequency method can employed extract count structures, can plotted window.","code":"# plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE) # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 117026294,snp_end = 122613594,ly = FALSE) model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\",                                              snp_start = 117026294,snp_end = 122613594)  class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\"  plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE) hap_str <- gwid::haplotype_structure(ibd_data,                                      phase = haplotype_data,                                      w = 10,                                      snp_start = 117026294,snp_end = 122613594) class(hap_str) #> [1] \"haplotype_structure\" \"data.table\"          \"data.frame\"  hap_str[sample(1:nrow(hap_str),size = 5),] # structures column have haplotype of length w=10  #>    case_control   snp_pos window_number                     smp structures #> 1:        cases 121168167           491    MC.161208@1076254558 0000000000 #> 2:        cases 119446862           319 MC.AMD114863@0123861602 1000000001 #> 3:        cases 118941441           212 MC.AMD105884@0123861718 0000010000 #> 4:        cases 118945796           215 MC.AMD106221@0124011373 0100101100 #> 5:        cont1 118793832           187 MC.AMD107926@0123861155 1000010000 haplo_freq <- gwid::haplotype_frequency(hap_str) # plot haplotype counts in first window (nwin=1).  plot(haplo_freq,    y = c(\"cases\", \"cont1\"),    plot_type = \"haplotype_structure_frequency\",    nwin = 1, type = \"version1\",    ly = FALSE  )"},{"path":"https://soroushmdg.github.io/gwid/reference/build_gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a SNP GDS file and extract information. — build_gwas","title":"Open a SNP GDS file and extract information. — build_gwas","text":"Open SNP GDS file extract information.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/build_gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a SNP GDS file and extract information. — build_gwas","text":"","code":"build_gwas(gds_data = \"name.gds\", caco = \"name.Rda\", gwas_generator = TRUE)"},{"path":"https://soroushmdg.github.io/gwid/reference/build_gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a SNP GDS file and extract information. — build_gwas","text":"gds_data File name caco object class caco. Output case_control function. gwas_generator logical; TRUE object class result_snps saved inside output list.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/build_gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a SNP GDS file and extract information. — build_gwas","text":"list seven objects; including smp.id, snp.id, snp.pos, smp.indx, smp.snp (matrix samples rows snp columns), caco, snps(column sum smp.snp case control)","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/build_gwid.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a ibd file and extract information. — build_gwid","title":"Open a ibd file and extract information. — build_gwid","text":"Open ibd file extract information.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/build_gwid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a ibd file and extract information. — build_gwid","text":"","code":"build_gwid(   ibd_data = \"name.ibd\",   gwas = \"object of class gwas\",   gwid_generator = TRUE )"},{"path":"https://soroushmdg.github.io/gwid/reference/build_gwid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a ibd file and extract information. — build_gwid","text":"ibd_data file name output Refined IBD gwas object class gwas gwid_generator logical; TRUE object class result_snps saved inside output list.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/build_gwid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a ibd file and extract information. — build_gwid","text":"output object(list) class gwid contains profile object, IBD object result_snps object.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/build_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Read .vcf structured text format files and reduce the size of file. — build_phase","title":"Read .vcf structured text format files and reduce the size of file. — build_phase","text":"Read .vcf structured text format files reduce size file.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/build_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read .vcf structured text format files and reduce the size of file. — build_phase","text":"","code":"build_phase(phased_vcf = \"name.vcf\", caco)"},{"path":"https://soroushmdg.github.io/gwid/reference/build_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read .vcf structured text format files and reduce the size of file. — build_phase","text":"phased_vcf file name variant call format (vcf) file. caco object class caco. Output case_control function.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/build_phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read .vcf structured text format files and reduce the size of file. — build_phase","text":"output list class phase contains two sparse matrix haplotype.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/case_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload saved case-control list file — case_control","title":"Reload saved case-control list file — case_control","text":"Reload saved case-control list file","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/case_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload saved case-control list file — case_control","text":"","code":"case_control(case_control_rda, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/case_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload saved case-control list file — case_control","text":"case_control_rda character string giving name case-control file load. file list character vectors including subject names case-control groups csv file including subject name disease. ... name column (disease name) csv file.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/case_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload saved case-control list file — case_control","text":"output list character vectors include subject names groups. class returned object caco.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information from SNP GDS file. — extract.gwas","title":"Extract information from SNP GDS file. — extract.gwas","text":"Extract information SNP GDS file.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information from SNP GDS file. — extract.gwas","text":"","code":"# S3 method for gwas extract(obj, type = c(\"snps\", \"snp2\", \"nas\"), snp_start, snp_end, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information from SNP GDS file. — extract.gwas","text":"obj object class gwas. type indicate type aggregation sample-snp data must one snps, snp2, nas snp_start select starting position snp, want aggregate. snp_end select ending position snp, want aggregate. ... arguments","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information from SNP GDS file. — extract.gwas","text":"output result_snps (data.table) object including 3 columns including, snp_pos, case_control, value","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract information from SNP GDS file. — extract.gwas","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwid.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information from ibd data. — extract.gwid","title":"Extract information from ibd data. — extract.gwid","text":"Extract information ibd data.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information from ibd data. — extract.gwid","text":"","code":"# S3 method for gwid extract(obj = \"object of class gwid\", snp_start, snp_end, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information from ibd data. — extract.gwid","text":"obj object class gwid(output function build_gwid) snp_start select starting position snp, want aggregate. snp_end select ending position snp, want aggregate. ... objects","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information from ibd data. — extract.gwid","text":"output result_snps (data.table) object including 3 columns including, “snp_pos”, “case_control”, “value”","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.gwid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract information from ibd data. — extract.gwid","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information from SNP GDS file. — extract","title":"Extract information from SNP GDS file. — extract","text":"Extract information SNP GDS file.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information from SNP GDS file. — extract","text":"","code":"extract(obj, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information from SNP GDS file. — extract","text":"obj object class gwas ... arguments","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information from SNP GDS file. — extract","text":"extract object instants","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.gwid.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information from ibd data in a moving window — extract_window.gwid","title":"Extract information from ibd data in a moving window — extract_window.gwid","text":"Extract information ibd data moving window","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.gwid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information from ibd data in a moving window — extract_window.gwid","text":"","code":"# S3 method for gwid extract_window(obj, w = 10, snp_start, snp_end, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.gwid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information from ibd data in a moving window — extract_window.gwid","text":"obj object class gwid(output function build_gwid) w window size snp_start select starting position snp, want aggregate. snp_end select ending position snp, want aggregate. ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.gwid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information from ibd data in a moving window — extract_window.gwid","text":"output result_snps (data.table) object including 3 columns including, “snp_pos”, “case_control”, “value”","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.gwid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract information from ibd data in a moving window — extract_window.gwid","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.html","id":null,"dir":"Reference","previous_headings":"","what":"extract component of an object — extract_window","title":"extract component of an object — extract_window","text":"extract component object","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract component of an object — extract_window","text":"","code":"extract_window(obj, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract component of an object — extract_window","text":"obj obj ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/extract_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract component of an object — extract_window","text":"output result_snps (data.table) object including 3 columns including, “snp_pos”, “case_control”, “value”","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's Exact Test for gwas count data — fisher_test.gwas","title":"Fisher's Exact Test for gwas count data — fisher_test.gwas","text":"Fisher's Exact Test gwas count data","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's Exact Test for gwas count data — fisher_test.gwas","text":"","code":"# S3 method for gwas fisher_test(   obj,   reference,   snp_start,   snp_end,   alternative = c(\"two.sided\", \"greater\", \"less\"),   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's Exact Test for gwas count data — fisher_test.gwas","text":"obj object class gwas reference reference group subjects want perform fisher test test snp_start select starting position snps. snp_end select ending position snp. alternative indicates alternative hypothesis must one \"two.sided\", \"greater\" \"less\". can specify just initial letter. used 2 2 case ... optional arguments fisher.test","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher's Exact Test for gwas count data — fisher_test.gwas","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fisher's Exact Test for gwas count data — fisher_test.gwas","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwid.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's Exact Test for gwid count data — fisher_test.gwid","title":"Fisher's Exact Test for gwid count data — fisher_test.gwid","text":"Fisher's Exact Test gwid count data","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's Exact Test for gwid count data — fisher_test.gwid","text":"","code":"# S3 method for gwid fisher_test(   obj,   caco,   snp_start,   snp_end,   reference,   alternative = c(\"two.sided\", \"greater\", \"less\"),   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's Exact Test for gwid count data — fisher_test.gwid","text":"obj object class gwid. Output build_gwid function caco object class caco. Output case_control function. snp_start select starting position snps. snp_end select ending position snp. reference reference group subjects want perform fisher test alternative indicates alternative hypothesis must one \"two.sided\", \"greater\" \"less\". can specify just initial letter. used 2 2 case ... optional arguments fisher.test","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher's Exact Test for gwid count data — fisher_test.gwid","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.gwid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fisher's Exact Test for gwid count data — fisher_test.gwid","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher test — fisher_test","title":"Fisher test — fisher_test","text":"Fisher test","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher test — fisher_test","text":"","code":"fisher_test(obj, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher test — fisher_test","text":"obj object ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher test — fisher_test","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.result_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"fisher exact test for result_snps count data — fisher_test.result_snps","title":"fisher exact test for result_snps count data — fisher_test.result_snps","text":"fisher exact test result_snps count data","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.result_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fisher exact test for result_snps count data — fisher_test.result_snps","text":"","code":"# S3 method for result_snps fisher_test(   obj,   caco,   reference,   alternative = c(\"two.sided\", \"greater\", \"less\"),   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.result_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fisher exact test for result_snps count data — fisher_test.result_snps","text":"obj object class result_snps caco object class caco. Output case_control function. reference reference group subjects want perform fisher test. alternative indicates alternative hypothesis must one \"two.sided\", \"greater\" \"less\". can specify just initial letter. used 2 2 case ... optional arguments fisher.test","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.result_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fisher exact test for result_snps count data — fisher_test.result_snps","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/fisher_test.result_snps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fisher exact test for result_snps count data — fisher_test.result_snps","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) model_permutation <- permutation_test(ibd_data,snp_data_gds, snp_start = 119026294,snp_end = 120613594,nperm=20,reference = \"cases\") class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/gtest.haplotype_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform G-test on haplotype structures extracted from haplotype_structure function — gtest.haplotype_structure","title":"Perform G-test on haplotype structures extracted from haplotype_structure function — gtest.haplotype_structure","text":"Perform G-test haplotype structures extracted haplotype_structure function","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/gtest.haplotype_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform G-test on haplotype structures extracted from haplotype_structure function — gtest.haplotype_structure","text":"","code":"# S3 method for haplotype_structure gtest(haplotype_structure, reference, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/gtest.haplotype_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform G-test on haplotype structures extracted from haplotype_structure function — gtest.haplotype_structure","text":"haplotype_structure object class haplotype_structure. Output haplotype_structure function. reference reference group subjects want perform G-test ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/gtest.haplotype_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform G-test on haplotype structures extracted from haplotype_structure function — gtest.haplotype_structure","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/gtest.html","id":null,"dir":"Reference","previous_headings":"","what":"perform gtest — gtest","title":"perform gtest — gtest","text":"perform gtest","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/gtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"perform gtest — gtest","text":"","code":"gtest(haplotype_structure, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/gtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"perform gtest — gtest","text":"haplotype_structure object class ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/gtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"perform gtest — gtest","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.haplotype_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"haplotype frequency in sliding windows — haplotype_frequency.haplotype_structure","title":"haplotype frequency in sliding windows — haplotype_frequency.haplotype_structure","text":"haplotype frequency sliding windows","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.haplotype_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"haplotype frequency in sliding windows — haplotype_frequency.haplotype_structure","text":"","code":"# S3 method for haplotype_structure haplotype_frequency(haplotype_structure, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.haplotype_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"haplotype frequency in sliding windows — haplotype_frequency.haplotype_structure","text":"haplotype_structure object class haplotype_structure. Output haplotype_structure function. ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.haplotype_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"haplotype frequency in sliding windows — haplotype_frequency.haplotype_structure","text":"object class haplotype_frequency contains two objects. first one object haplotype_structure_frequency (data.table) second one object class result_snps(data.table)","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.haplotype_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"haplotype frequency in sliding windows — haplotype_frequency.haplotype_structure","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"haplotype frequency — haplotype_frequency","title":"haplotype frequency — haplotype_frequency","text":"haplotype frequency","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"haplotype frequency — haplotype_frequency","text":"","code":"haplotype_frequency(haplotype_structure, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"haplotype frequency — haplotype_frequency","text":"haplotype_structure object class haplotype structure ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"haplotype frequency — haplotype_frequency","text":"object class haplotype_frequency contains two objects. first one object haplotype_structure_frequency (data.table) second one object class result_snps(data.table)","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_frequency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"haplotype frequency — haplotype_frequency","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"extract haplotype structures of individuals in a window — haplotype_structure.gwas","title":"extract haplotype structures of individuals in a window — haplotype_structure.gwas","text":"extract haplotype structures individuals window","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract haplotype structures of individuals in a window — haplotype_structure.gwas","text":"","code":"# S3 method for gwas haplotype_structure(obj, phase, w = 10, snp_start, snp_end, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract haplotype structures of individuals in a window — haplotype_structure.gwas","text":"obj object class gwas phase object class phase. Output build_phase function w window size snp_start select starting position snps. snp_end select ending position snps. ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract haplotype structures of individuals in a window — haplotype_structure.gwas","text":"output object class haplotype_structure (data.table) information subjects haplotype structures window.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract haplotype structures of individuals in a window — haplotype_structure.gwas","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwid.html","id":null,"dir":"Reference","previous_headings":"","what":"extract haplotype structures of pairwise ibd samples in a window — haplotype_structure.gwid","title":"extract haplotype structures of pairwise ibd samples in a window — haplotype_structure.gwid","text":"extract haplotype structures pairwise ibd samples window","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract haplotype structures of pairwise ibd samples in a window — haplotype_structure.gwid","text":"","code":"# S3 method for gwid haplotype_structure(obj, phase, w = 10, snp_start, snp_end, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract haplotype structures of pairwise ibd samples in a window — haplotype_structure.gwid","text":"obj object class gwid. Output build_gwid function. phase object class phase. Output build_phase function. w window size snp_start select starting position snps. snp_end select ending position snps. ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract haplotype structures of pairwise ibd samples in a window — haplotype_structure.gwid","text":"output object class haplotype_structure (data.table) information subjects haplotype structures window.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.gwid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract haplotype structures of pairwise ibd samples in a window — haplotype_structure.gwid","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"haplotype structures in a window — haplotype_structure","title":"haplotype structures in a window — haplotype_structure","text":"haplotype structures window","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"haplotype structures in a window — haplotype_structure","text":"","code":"haplotype_structure(obj, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"haplotype structures in a window — haplotype_structure","text":"obj object ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/haplotype_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"haplotype structures in a window — haplotype_structure","text":"output object class haplotype_structure (data.table) information subjects haplotype structures window.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/launch_app.html","id":null,"dir":"Reference","previous_headings":"","what":"laucnh a shiny app — launch_app","title":"laucnh a shiny app — launch_app","text":"laucnh shiny app","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/launch_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"laucnh a shiny app — launch_app","text":"","code":"launch_app(data_folder_address, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/launch_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"laucnh a shiny app — launch_app","text":"data_folder_address address folder data folders . example two sets data data1 data2 mydata folder data_folder_address \"./mydata\" ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/launch_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"laucnh a shiny app — launch_app","text":"open shiny app","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test.html","id":null,"dir":"Reference","previous_headings":"","what":"mcnemar test — mcnemar_test","title":"mcnemar test — mcnemar_test","text":"mcnemar test","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcnemar test — mcnemar_test","text":"","code":"mcnemar_test(roh, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcnemar test — mcnemar_test","text":"roh roh class result_snp ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mcnemar test — mcnemar_test","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test.result_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"mcnemar test — mcnemar_test.result_snps","title":"mcnemar test — mcnemar_test.result_snps","text":"mcnemar test","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test.result_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcnemar test — mcnemar_test.result_snps","text":"","code":"# S3 method for result_snps mcnemar_test(   roh = \"object of class result_snps (output of function roh with fun=sum)\",   reference,   w = 10,   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test.result_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcnemar test — mcnemar_test.result_snps","text":"roh object class result_snps (output function roh fun=sum) reference reference group subjects want perform fisher test. w window size ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test.result_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mcnemar test — mcnemar_test.result_snps","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test_permut.html","id":null,"dir":"Reference","previous_headings":"","what":"mcnemar permutation — mcnemar_test_permut","title":"mcnemar permutation — mcnemar_test_permut","text":"mcnemar permutation","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test_permut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcnemar permutation — mcnemar_test_permut","text":"","code":"mcnemar_test_permut(mcnemar, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test_permut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcnemar permutation — mcnemar_test_permut","text":"mcnemar macnemar test output ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test_permut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mcnemar permutation — mcnemar_test_permut","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test_permut.result_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"mcnemar permutation test — mcnemar_test_permut.result_snps","title":"mcnemar permutation test — mcnemar_test_permut.result_snps","text":"mcnemar permutation test","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test_permut.result_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcnemar permutation test — mcnemar_test_permut.result_snps","text":"","code":"# S3 method for result_snps mcnemar_test_permut(   mcnemar = \"object of class result_snps (output of function mcnemar_test with fun=sum)\",   roh_mat = \"output of roh function when roh_mat = TRUE\",   gwas = \"object of class gwas\",   nperm = 1000,   reference = \"cases\",   w,   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test_permut.result_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcnemar permutation test — mcnemar_test_permut.result_snps","text":"mcnemar macnemar test output roh_mat roh matrix gwas gwas nperm number permutation reference reference group w window ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/mcnemar_test_permut.result_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mcnemar permutation test — mcnemar_test_permut.result_snps","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation test for gwas object — permutation_test.gwas","title":"Permutation test for gwas object — permutation_test.gwas","text":"Permutation test gwas object","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation test for gwas object — permutation_test.gwas","text":"","code":"# S3 method for gwas permutation_test(   obj,   snp_start,   snp_end,   nperm = 1000,   reference = \"cases\",   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation test for gwas object — permutation_test.gwas","text":"obj object class gwas snp_start elect starting position snps. snp_end select ending position snp. nperm Number permutations. reference reference group subjects want perform fisher test ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation test for gwas object — permutation_test.gwas","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutation test for gwas object — permutation_test.gwas","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) model_permutation <- permutation_test(ibd_data,snp_data_gds, snp_start = 119026294,snp_end = 120613594,nperm=20,reference = \"cases\") class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwid.html","id":null,"dir":"Reference","previous_headings":"","what":"permutation test for gwid count data — permutation_test.gwid","title":"permutation test for gwid count data — permutation_test.gwid","text":"permutation test gwid count data","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"permutation test for gwid count data — permutation_test.gwid","text":"","code":"# S3 method for gwid permutation_test(   obj,   gwas,   snp_start,   snp_end,   nperm = 100,   reference = \"cases\",   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"permutation test for gwid count data — permutation_test.gwid","text":"obj object class gwid. Output build_gwid function gwas object class gwas snp_start select starting position snps. snp_end select ending position snp. nperm Number permutations. reference reference group ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"permutation test for gwid count data — permutation_test.gwid","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.gwid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"permutation test for gwid count data — permutation_test.gwid","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) model_permutation <- permutation_test(ibd_data,snp_data_gds, snp_start = 119026294,snp_end = 120613594,nperm=20,reference = \"cases\") class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.haplotype_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation test for `haplotype_structure` object — permutation_test.haplotype_structure","title":"Permutation test for `haplotype_structure` object — permutation_test.haplotype_structure","text":"Permutation test `haplotype_structure` object","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.haplotype_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation test for `haplotype_structure` object — permutation_test.haplotype_structure","text":"","code":"# S3 method for haplotype_structure permutation_test(obj, nperm, reference, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.haplotype_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation test for `haplotype_structure` object — permutation_test.haplotype_structure","text":"obj object class `haplotype_structure` nperm Number permutations. reference reference group subjects want perform `gtest` ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.haplotype_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation test for `haplotype_structure` object — permutation_test.haplotype_structure","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.haplotype_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutation test for `haplotype_structure` object — permutation_test.haplotype_structure","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) model_permutation <- permutation_test(ibd_data,snp_data_gds, snp_start = 119026294,snp_end = 120613594,nperm=20,reference = \"cases\") class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.html","id":null,"dir":"Reference","previous_headings":"","what":"permutation test — permutation_test","title":"permutation test — permutation_test","text":"permutation test","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"permutation test — permutation_test","text":"","code":"permutation_test(obj, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"permutation test — permutation_test","text":"obj object ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/permutation_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"permutation test — permutation_test","text":"output test_snps (data.table) object including 3 columns:  “snp_pos”, “case_control”, “value” p-values.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plot of gwas objects — plot.gwas","title":"Line plot of gwas objects — plot.gwas","text":"Line plot gwas objects","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot of gwas objects — plot.gwas","text":"","code":"# S3 method for gwas plot(x, y = NA, title = \"number of snps\", ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot of gwas objects — plot.gwas","text":"x object class gwas. y default value NA, specified vector names subject groups .e. y = c(\"case\",\"control\") title title plot. ... optional argument plot","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plot of gwas objects — plot.gwas","text":"interactive line plot gwas objects case control subjects.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line plot of gwas objects — plot.gwas","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwid.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plot of gwid objects — plot.gwid","title":"Line plot of gwid objects — plot.gwid","text":"Line plot gwid objects","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot of gwid objects — plot.gwid","text":"","code":"# S3 method for gwid plot(   x,   y = NA,   title = \"number of IBD in each snp\",   plot_type = c(\"result_snps\", \"profile\"),   reference,   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot of gwid objects — plot.gwid","text":"x object class gwid. Output build_gwid function. y default value NA, specified vector names subject groups .e. y = c(\"case\",\"control\") title title plot. plot_type either “result_snps” “profile”. reference reference group subjects want profile plot. ... plot_type “result_snps” optional argument plot. plot_type “profile” can subset plot based snp_start snp_end locations.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plot of gwid objects — plot.gwid","text":"plot_type “result_snps” interactive line plot result_snps case control subjects. plot_type “profile” interactive profile plot identity descent subjects subset locations.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.gwid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line plot of gwid objects — plot.gwid","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plot of haplotype_frequency object — plot.haplotype_frequency","title":"Line plot of haplotype_frequency object — plot.haplotype_frequency","text":"Line plot haplotype_frequency object","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot of haplotype_frequency object — plot.haplotype_frequency","text":"","code":"# S3 method for haplotype_frequency plot(   x,   y = NA,   plot_type = c(\"haplotype_structure_frequency\", \"result_snps\"),   type = c(\"version1\", \"version2\"),   ly = TRUE,   nwin,   title,   line_size = 0.6,   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot of haplotype_frequency object — plot.haplotype_frequency","text":"x object class haplotype_frequency y default value `NA`, specified vector names subject groups .e. `y = c(\"case\",\"control\")` plot_type either “result_snps” “\"haplotype_structure_frequency\"” type either “version1” “version2” plot_type “\"haplotype_structure_frequency\"” ly TRUE, plotly object false plot going ggplot object. nwin window number title title plot. line_size geom_line size ... optional argument plot","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plot of haplotype_frequency object — plot.haplotype_frequency","text":"interactive line plot haplotype_frequency objects case control subjects.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_frequency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line plot of haplotype_frequency object — plot.haplotype_frequency","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_structure_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Two type of line plots for haplotype_structure_frequency objects . — plot.haplotype_structure_frequency","title":"Two type of line plots for haplotype_structure_frequency objects . — plot.haplotype_structure_frequency","text":"Two type line plots haplotype_structure_frequency objects .","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_structure_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two type of line plots for haplotype_structure_frequency objects . — plot.haplotype_structure_frequency","text":"","code":"# S3 method for haplotype_structure_frequency plot(   x,   y = NA,   type = c(\"version1\", \"version2\"),   nwin,   ly = TRUE,   line_size = 0.6,   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_structure_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two type of line plots for haplotype_structure_frequency objects . — plot.haplotype_structure_frequency","text":"x object class haplotype_structure_frequency y default value NA, specified vector names subject groups .e. y = c(\"case\",\"control\") type either “version1” “version2” nwin window number ly `TRUE`, `plotly` object `FALSE` plot going `ggplot` object. line_size geom_line size ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_structure_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two type of line plots for haplotype_structure_frequency objects . — plot.haplotype_structure_frequency","text":"interactive line plot haplotype_structure_frequency objects case control subjects.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.haplotype_structure_frequency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two type of line plots for haplotype_structure_frequency objects . — plot.haplotype_structure_frequency","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.result_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plot of result_snps objects — plot.result_snps","title":"Line plot of result_snps objects — plot.result_snps","text":"Line plot result_snps objects","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.result_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot of result_snps objects — plot.result_snps","text":"","code":"# S3 method for result_snps plot(x, y = NA, title, snp_start, snp_end, ly = TRUE, line_size = 0.6, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.result_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot of result_snps objects — plot.result_snps","text":"x object class result_snps. y default value NA, specified vector names subject groups .e. y = c(\"case\",\"control\") title title plot. snp_start select starting position snps. snp_end select ending position snps. ly TRUE, plotly object false plot going ggplot object. line_size geom_line size ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.result_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plot of result_snps objects — plot.result_snps","text":"interactive line plot result_snps case control subjects.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.result_snps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line plot of result_snps objects — plot.result_snps","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.test_snps.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plot of test_snps objects — plot.test_snps","title":"Line plot of test_snps objects — plot.test_snps","text":"Line plot test_snps objects","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.test_snps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot of test_snps objects — plot.test_snps","text":"","code":"# S3 method for test_snps plot(x, y = NA, title, snp_start, snp_end, ly = TRUE, line_size = 0.6, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/plot.test_snps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot of test_snps objects — plot.test_snps","text":"x object class test_snps. y default value NA, specified vector names subject groups .e. y = c(\"case\",\"control\") title title plot. snp_start select starting position snps. snp_end select ending position snps. ly `TRUE`, `plotly` object `FALSE` plot going `ggplot` object. line_size geom_line size ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.test_snps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plot of test_snps objects — plot.test_snps","text":"interactive line plot test_snps objects case control subjects.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/plot.test_snps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line plot of test_snps objects — plot.test_snps","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/print.gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"print gwas instants — print.gwas","title":"print gwas instants — print.gwas","text":"print gwas instants","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/print.gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print gwas instants — print.gwas","text":"","code":"# S3 method for gwas print(x, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/print.gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print gwas instants — print.gwas","text":"x object gwas ... objects","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/print.gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print gwas instants — print.gwas","text":"print number subjects number SNPs GWAS object","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/print.gwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print gwas instants — print.gwas","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) print(snp_data_gds) #> [1] \"object of class gwas with 2839 samples and 22302 SNPs\" class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"print — print","title":"print — print","text":"print","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print — print","text":"","code":"print(x, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print — print","text":"x object ... objects","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print — print","text":"print object","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/roh.html","id":null,"dir":"Reference","previous_headings":"","what":"runs of homozygosity — roh","title":"runs of homozygosity — roh","text":"runs homozygosity","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/roh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runs of homozygosity — roh","text":"","code":"roh(phase, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/roh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runs of homozygosity — roh","text":"phase object phase ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/roh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"runs of homozygosity — roh","text":"runs homozygosity data table matrix","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/roh.phase.html","id":null,"dir":"Reference","previous_headings":"","what":"runs of homozygosity — roh.phase","title":"runs of homozygosity — roh.phase","text":"runs homozygosity","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/roh.phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runs of homozygosity — roh.phase","text":"","code":"# S3 method for phase roh(   phase,   gwas,   w = 10,   fun = c(\"sum\", \"mean\"),   snp_start,   snp_end,   roh_mat = FALSE,   ... )"},{"path":"https://soroushmdg.github.io/gwid/reference/roh.phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runs of homozygosity — roh.phase","text":"phase object class phase. Output build_phase function gwas object class gwas w window size fun aggregate function. either  “sum”  “mean” snp_start select starting position snps. snp_end select ending position snps. roh_mat return roh matrix ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/roh.phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"runs of homozygosity — roh.phase","text":"output result_snps (data.table) object including 3 columns including, “snp_pos”, “case_control”, “value”","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/subset.gwid.html","id":null,"dir":"Reference","previous_headings":"","what":"subset gwid object based on snp position — subset.gwid","title":"subset gwid object based on snp position — subset.gwid","text":"subset gwid object based snp position","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/subset.gwid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset gwid object based on snp position — subset.gwid","text":"","code":"# S3 method for gwid subset(obj, snp_start, snp_end, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/subset.gwid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"subset gwid object based on snp position — subset.gwid","text":"obj object class gwid(output function build_gwid) snp_start select starting position snp, want aggregate. snp_end select ending position snp, want aggregate. ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/subset.gwid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"subset gwid object based on snp position — subset.gwid","text":"output object(list) class gwid contains profile object result_snps object.","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/subset.gwid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"subset gwid object based on snp position — subset.gwid","text":"","code":"# \\donttest{ piggyback::pb_download(repo = \"soroushmdg/gwid\",tag = \"v0.0.1\",dest = tempdir()) #> ℹ All local files already up-to-date! ibd_data_file <- paste0(tempdir(),\"//chr3.ibd\") genome_data_file <- paste0(tempdir(),\"//chr3.gds\") phase_data_file <- paste0(tempdir(),\"//chr3.vcf\") case_control_data_file <- paste0(tempdir(),\"//case-cont-RA.withmap.Rda\") # case-control data case_control <- gwid::case_control(case_control_rda = case_control_data_file) names(case_control) #cases and controls group #> [1] \"cases\" \"case1\" \"case2\" \"cont1\" \"cont2\" \"cont3\" summary(case_control) # in here, we only consider cases,cont1,cont2,cont3 groups in the study #>       Length Class  Mode      #> cases 478    -none- character #> case1 178    -none- character #> case2 300    -none- character #> cont1 477    -none- character #> cont2 478    -none- character #> cont3 478    -none- character case_control$cases[1:3] # first three subject names of cases group #> [1] \"MC.154405@1075678440\" \"MC.154595@1075642175\" \"MC.154701@1076254706\" # read SNP data (use SNPRelate to convert it to gds) and count number of minor alleles snp_data_gds <- gwid::build_gwas(gds_data = genome_data_file, caco = case_control,gwas_generator = TRUE) class(snp_data_gds) #> [1] \"gwas\" names(snp_data_gds) #> [1] \"smp.id\"   \"snp.id\"   \"snp.pos\"  \"smp.indx\" \"smp.snp\"  \"caco\"     \"snps\"     head(snp_data_gds$snps) # it has information about counts of minor alleles in each location. #> Key: <snp_pos> #>    snp_pos case_control value #>      <int>       <fctr> <int> #> 1:   66894        cases   627 #> 2:   66894        case1   240 #> 3:   66894        case2   387 #> 4:   66894        cont1   639 #> 5:   66894        cont2   647 #> 6:   66894        cont3   646 # read haplotype data (output of beagle) haplotype_data <- gwid::build_phase(phased_vcf = phase_data_file,caco = case_control) class(haplotype_data) #> [1] \"phase\" names(haplotype_data) #> [1] \"Hap.1\" \"Hap.2\" dim(haplotype_data$Hap.1) #22302 SNP and 1911 subjects #> [1] 22302  1911 # read IBD data (output of Refined-IBD) ibd_data <- gwid::build_gwid(ibd_data = ibd_data_file,gwas = snp_data_gds) class(ibd_data) #> [1] \"gwid\" ibd_data$ibd # refined IBD output #>                              V1    V2                      V3    V4    V5 #>                          <char> <int>                  <char> <int> <int> #>      1: MC.AMD127769@0123889787     2    MC.160821@1075679055     1     3 #>      2: MC.AMD127769@0123889787     1 MC.AMD107154@0123908746     1     3 #>      3: MC.AMD127769@0123889787     2    9474283-1-0238040187     1     3 #>      4: MC.AMD127769@0123889787     1    MC.159487@1075679208     2     3 #>      5:    MC.163045@1082086165     2    MC.160470@1075679095     1     3 #>     ---                                                                   #> 377560:    1492602-1-0238095971     2    2235472-1-0238095471     2     3 #> 377561:    4618455-1-0238095900     2    3848034-1-0238094219     1     3 #> 377562:    MC.160332@1075641581     2    9630188-1-0238038787     2     3 #> 377563: MC.AMD122238@0124011436     2    MC.159900@1076254946     1     3 #> 377564: MC.AMD105910@0123907456     1    7542312-1-0238039298     1     3 #>                V6        V7    V8    V9 #>             <int>     <int> <num> <num> #>      1:  32933295  34817627  3.26 1.884 #>      2:  29995340  31752607  4.35 1.757 #>      3:  34165785  35898774  6.36 1.733 #>      4:  21526766  23162240  8.71 1.635 #>      5:  11822616  13523010  5.29 1.700 #>     ---                                 #> 377560: 194785443 196328849  4.92 1.543 #> 377561: 190235788 192423862  7.77 2.188 #> 377562: 184005719 186184328  5.95 2.179 #> 377563: 181482803 184801115  3.58 3.318 #> 377564: 182440135 183972729  3.03 1.533 ibd_data$res # count number of IBD for each SNP location #>           snp_pos case_control value #>             <num>       <fctr> <num> #>      1:     66894        cases    27 #>      2:     82010        cases    28 #>      3:     89511        cases    29 #>      4:    104972        cases    29 #>      5:    107776        cases    29 #>     ---                              #> 133808: 197687252        cont3    44 #> 133809: 197701913        cont3    44 #> 133810: 197744198        cont3    44 #> 133811: 197762623        cont3    44 #> 133812: 197833758        cont3    44 # plot count of IBD in chromosome 3 plot(ibd_data,y = c(\"cases\",\"cont1\"),ly = FALSE)  # Further investigate location between 117M and 122M # significant number of IBD's in group cases, compare to cont1, cont2 and cont3. plot(ibd_data,y = c(\"cases\",\"cont1\"),snp_start = 119026294,snp_end = 120613594,ly = FALSE)  model_fisher <- gwid::fisher_test(ibd_data,case_control,reference = \"cases\", snp_start = 119026294,snp_end = 120613594) class(model_fisher) #> [1] \"test_snps\"  \"data.table\" \"data.frame\" plot(model_fisher, y = c(\"cases\",\"cont1\"),ly = FALSE)  hap_str <- gwid::haplotype_structure(ibd_data,phase = haplotype_data,w = 10, snp_start = 119026294,snp_end = 120613594) haplo_freq <- gwid::haplotype_frequency(hap_str) plot(haplo_freq,y = c(\"cases\", \"cont1\"),plot_type = \"haplotype_structure_frequency\", nwin = 1, type = \"version1\",ly = FALSE)  # }"},{"path":"https://soroushmdg.github.io/gwid/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"subset an object — subset","title":"subset an object — subset","text":"subset object","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset an object — subset","text":"","code":"subset(obj, ...)"},{"path":"https://soroushmdg.github.io/gwid/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"subset an object — subset","text":"obj object ... variables","code":""},{"path":"https://soroushmdg.github.io/gwid/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"subset an object — subset","text":"output object(list) class gwid contains profile object result_snps object.","code":""},{"path":"https://soroushmdg.github.io/gwid/news/index.html","id":"gwid-010","dir":"Changelog","previous_headings":"","what":"gwid 0.1.0","title":"gwid 0.1.0","text":"CRAN release: 2023-12-14","code":""},{"path":"https://soroushmdg.github.io/gwid/news/index.html","id":"gwid-002","dir":"Changelog","previous_headings":"","what":"gwid 0.0.2","title":"gwid 0.0.2","text":"Initial CRAN submission.","code":""}]
