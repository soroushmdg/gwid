mbasis <-  create.bspline.basis(c(sorted_times[1],sorted_times[length(sorted_times)]),nbasis)
mdbs2 <- ReMFPCA::Basismfd(mbasis)
protein_res <- ReMFPCA::Mfd(X = t(protein_reconstruct),mdbs = mdbs2)
sorted_times <- sort(unique(unlist(cytok_pace$Lt)))
mbasis <-  create.bspline.basis(c(sorted_times[1],sorted_times[length(sorted_times)]),nbasis)
mdbs2 <- ReMFPCA::Basismfd(mbasis)
cytok_res <- ReMFPCA::Mfd(X = t(cytok_reconstruct),mdbs = mdbs2)
sorted_times <- sort(unique(unlist(a1c_pace$Lt)))
mbasis <-  create.bspline.basis(c(sorted_times[1],sorted_times[length(sorted_times)]),nbasis)
mdbs2 <- ReMFPCA::Basismfd(mbasis)
a1c_res <- ReMFPCA::Mfd(X = t(a1c_reconstruct),mdbs = mdbs2)
alpha1 <- list(a1=2^seq(-35,5,length.out=10),a2=2^seq(-35,5,length.out=10),a3=2^seq(-35,5,length.out=10),a4=2^seq(-35,5,length.out=10))
mvmfd_obj = ReMFPCA::Mvmfd(list(microb_res,protein_res,cytok_res,a1c_res))
res_mult = ReMFPCA::Remfpca(mvmfd_obj = mvmfd_obj, centerfns = T, ncomp = 3,alpha = alpha1,penalty_type = "coefpen")
res_mult$alpha
res_mult$values
sum(res_mult$values)/res_mult$values
(res_mult$values)/sum(res_mult$values)
microb_mean <- res_mult$mean_mfd[,1]$eval(list(sorted_times))
protein_mean <- res_mult$mean_mfd[,2]$eval(list(sorted_times))
cytok_mean <- res_mult$mean_mfd[,3]$eval(list(sorted_times))
a1c_mean <- res_mult$mean_mfd[,4]$eval(list(sorted_times))
microb_fpc <- res_mult$pc_mfd[,1]$eval(list(sorted_times))
protein_fpc <- res_mult$pc_mfd[,2]$eval(list(sorted_times))
cytok_fpc <- res_mult$pc_mfd[,3]$eval(list(sorted_times))
a1c_fpc <- res_mult$pc_mfd[,4]$eval(list(sorted_times))
fpc_list <- vector("list",3)
names(fpc_list) <- c("fpc1","fpc2","fpc3")
#alpha <- 12
alpha <- 20
for (i in 1:3) {
fpc_list[[i]] <- vector("list",4)
names(fpc_list[[i]]) <- c("microb","protein","cytok","a1c")
fpc_list[[i]][[1]] <- cbind(microb_mean,alpha*microb_fpc[,i] + microb_mean, -microb_fpc[,i]*alpha + microb_mean,sorted_times) |> as.data.table()
colnames(fpc_list[[i]][[1]]) <- c("mean","fpc_os","fpc_neg","sorted_times")
fpc_list[[i]][[1]] <- melt(fpc_list[[i]][[1]],4)
fpc_list[[i]][[2]] <- cbind(protein_mean,alpha*protein_fpc[,i] + protein_mean, -protein_fpc[,i]*alpha + protein_mean,sorted_times) |> as.data.table()
colnames(fpc_list[[i]][[2]]) <- c("mean","fpc_pos","fpc_neg","sorted_times")
fpc_list[[i]][[2]] <- melt(fpc_list[[i]][[2]],4)
fpc_list[[i]][[3]] <- cbind(cytok_mean,alpha*cytok_fpc[,i] + cytok_mean, -cytok_fpc[,i]*alpha + cytok_mean,sorted_times) |> as.data.table()
colnames(fpc_list[[i]][[3]]) <- c("mean","fpc_pos","fpc_neg","sorted_times")
fpc_list[[i]][[3]] <- melt(fpc_list[[i]][[3]],4)
fpc_list[[i]][[4]] <- cbind(a1c_mean,alpha*a1c_fpc[,i] + a1c_mean, -a1c_fpc[,i]*alpha + a1c_mean,sorted_times) |> as.data.table()
colnames(fpc_list[[i]][[4]]) <- c("mean","fpc_pos","fpc_neg","sorted_times")
fpc_list[[i]][[4]] <- melt(fpc_list[[i]][[4]],4)
}
p1_microb <- ggplot(data = fpc_list[[1]][[1]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[1]])[1],names(fpc_list)[1])))
p2_microb <- ggplot(data = fpc_list[[2]][[1]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[2]])[1],names(fpc_list)[2])))
p3_microb <- ggplot(data = fpc_list[[3]][[1]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[3]])[1],names(fpc_list)[3])))
figure_microb <- ggarrange(p1_microb, p2_microb, p3_microb,
ncol = 1, nrow = 3)
figure_microb
p1_protein <- ggplot(data = fpc_list[[1]][[2]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[1]])[2],names(fpc_list)[1])))
p2_protein <- ggplot(data = fpc_list[[2]][[2]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[2]])[2],names(fpc_list)[2])))
p3_protein <- ggplot(data = fpc_list[[3]][[2]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[3]])[2],names(fpc_list)[3])))
figure_protein <- ggarrange(p1_protein, p2_protein, p3_protein,
ncol = 1, nrow = 3)
figure_protein
p1_cytok <- ggplot(data = fpc_list[[1]][[3]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[1]])[3],names(fpc_list)[1])))
p2_cytok <- ggplot(data = fpc_list[[2]][[3]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[2]])[3],names(fpc_list)[2])))
p3_cytok <- ggplot(data = fpc_list[[3]][[3]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[3]])[3],names(fpc_list)[3])))
figure_cytok <- ggarrange(p1_cytok, p2_cytok, p3_cytok,
ncol = 1, nrow = 3)
figure_cytok
p1_a1c <- ggplot(data = fpc_list[[1]][[4]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[1]])[4],names(fpc_list)[1])))
p2_a1c <- ggplot(data = fpc_list[[2]][[4]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[2]])[4],names(fpc_list)[2])))
p3_a1c<- ggplot(data = fpc_list[[3]][[4]], aes(x = sorted_times, y = value, color = variable)) +
geom_line(linewidth = .7) +
labs(x = "time", y = "shannon", color = "Legend Title") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
ggtitle( toString(paste(names(fpc_list[[3]])[4],names(fpc_list)[3])))
figure_a1c <- ggarrange(p1_a1c, p2_a1c, p3_a1c,
ncol = 1, nrow = 3)
figure_a1c
# inprod analysis ---------------------------------------------------------
vars <- c("microb","protein","cytok","a1c")
inner_prod <- matrix(0,nrow = 3, ncol = 4)
colnames(inner_prod) <- vars
rownames(inner_prod) <- paste0("fpc",1:3)
for (i in 1:ncol(inner_prod)) {
inner_prod[,i] <- inprod_mfd(res_mult$pc_mfd[,i],res_mult$pc_mfd[,i]) |> diag()
}
inner_prod
apply(microb_reconstruct,2,sd)
microb_fpca$mu
class(microb_fpca)
methods(class = "FPCA")
kkk <- predict(microb_fpca,newLy = microb_pace$Ly,newLt = microb_pace$Lt,K = )
microb_fpca$phi |> dim()
kkk <- predict(microb_fpca,newLy = microb_pace$Ly,newLt = microb_pace$Lt,K = 30)
all.equal(kkk,microb_reconstruct)
microb_reconstruct <- microb_fpca$xiEst %*%  t(microb_fpca$phi) + sapply(microb_fpca$mu,function(x) rep(x,length(unique(microb$SubjectUnique))))
all.equal(kkk,microb_reconstruct)
all.equal(kkk$predCurves,microb_reconstruct)
kkk$predCurves |> dim()
microb
setwd("C:/Users/soroush/OneDrive - Marquette University/Soroush/test/soroush_draftibd")
runApp()
kkk <- readRDS("../../../Downloads/gwid_data_files.rda")
kkk <- readRDS("../../../../Downloads/gwid_data_files.rda")
kkk$hap_str
kkk$hap_str |> plot()
kkk$hap_str
fish_test_gwid |> plot()
fish_test_gwid |> class()
kkk$fish_test_gwid |> class()
plot(kkk$fish_test_gwid)
runApp()
library(gwid)
1
library(gwid)
gwid:::run_shiny(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
?HTML
library(gwid)
gwid:::run_shiny(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
library(gwid)
gwid:::launch_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
library(gwid)
gwid:::launch_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
system.file("gwid_shiny",package = "gwid")
system.file("gwid_shiny",package = "gwid",local=T)
?system.file
system.file(package = "stats")
system.file(package = "gwid")
system.file("gwid_shiny.R",package = "gwid")
system.file("gwid_shiny.R",package = "gwid",local=T)
system.file("gwid_shiny.R",package = "gwid",local=TRUE)
system.file("build.R",package = "gwid",local=TRUE)
system.file("build.R",package = "gwid")
system.file("build.R",package = "gwid")
system.file(package = "gwid")
system.file("build.R",package = "gwid")
system.file("gwid_shiny.R",package = "gwid")
system.file("gwid_shiny.R",package = "gwid",chdir=T)
system.file("gwid_shiny.R",package = "gwid")
source(system.file("gwid_shiny.R",package = "gwid"))
system.file("select.R",package = "dplyr")
system.file(package = "dplyr")
system.file(package = "dplyr",local=T)
system.file(package = "dplyr",local=T,chr=T)
gwid:::launch_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
library(gwid)
gwid:::launch_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
1
library(gwid)
1
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
library(gwid)
1
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
library(gwid)
1
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
HTML("body { max-width: 1250px !important; }")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
install.packages("htmltools")
install.packages("htmltools")
install.packages(c("brew", "brio", "checkmate", "cli", "clue", "cowplot", "credentials", "curl", "data.table", "dbplyr", "deldir", "DEoptimR", "desc", "deSolve", "dotCall64", "dplyr", "DT", "emmeans", "expm", "fansi", "fastICA", "filelock", "forecast", "gert", "ggplot2", "ggrepel", "ggridges", "gtools", "haven", "Hmisc", "htmlTable", "httpuv", "igraph", "interp", "JADE", "jsonlite", "kSamples", "later", "lme4", "maps", "markdown", "Matrix", "MatrixModels", "matrixStats", "mclust", "metap", "minqa", "multicool", "mvtnorm", "nleqslv", "nor1mix", "pcaPP", "pkgbuild", "pkgload", "plotly", "plotrix", "plyr", "posterior", "pracma", "prettyunits", "processx", "progress", "purrr", "QuickJSR", "R.utils", "ragg", "rbibutils", "RcppArmadillo", "RcppEigen", "RCurl", "Rdpack", "rematch", "Rfssa", "rgl", "rlang", "robustbase", "rprojroot", "RSQLite", "rstan", "sandwich", "sass", "shiny", "spam", "stringi", "svd", "systemfonts", "tensorA", "testthat", "textshaping", "timeDate", "tseries", "TTR", "utf8", "vctrs", "vroom", "waldo", "XML", "xml2", "yaml"))
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
library(gwid)
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
?plotly::renderPlotly
?plotly::renderPlotly
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
library(gwid)
1
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
library(gwid)
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
devtools::load_all("C:/Users/soroush/OneDrive - Marquette University/Soroush/gwid")
gwid:::my_shiny_app(data_folder_address = "./",caco_file_name = "case-cont-RA.withmap.Rda")
getwd()
file.edit("~/OneDrive - Marquette University/Soroush/test/soroush_draftibd/app.R")
devtools::load_all(".")
shiny::runApp('~/OneDrive - Marquette University/Soroush/test/soroush_draftibd')
runApp('~/OneDrive - Marquette University/Soroush/test/soroush_draftibd')
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
a1
?match
match(a1$V6, gwas$snp.pos)
length(gwas$snp.pos)
ncol(profile[[j]]
)
min(Un1)
max(Un1)
profile |> length()
j
profile[[2]]
profile[[1]] |> dim()
mytemp |> dim()
1567+3729
profile[[j]] |> dim()
class(profile[[1]])
dim(profile[[1]])
min(Un1)
max(Un1)
dim(profile[[j]])
profile[[j]] <- Matrix::sparseMatrix(
i = rep(seq_along(a2), lengths(a2)),
j = Un1,
x = 1
)
dim(profile[[j]])
class(profile[[j]])
a1
min(Un1)
dim(profile[[j]])
5196-3857
max(Un1)
min(Un1)
Un1
Un1 |> unique() |> length()
Un1 |> unique() |> sort()
(Un1 |> unique() |> sort()) %in% (min(Un1):max(Un1))
(Un1 |> unique() |> sort()) %in% (min(Un1):max(Un1)) |> sum()
!(Un1 |> unique() |> sort()) %in% (min(Un1):max(Un1)) |> sum()
!((Un1 |> unique() |> sort()) %in% (min(Un1):max(Un1))) |> sum()
!((Un1 |> unique() |> sort()) %in% (min(Un1):max(Un1)))
(Un1 |> unique() |> sort())
(Un1 |> unique() |> sort()) |> diff()
which((Un1 |> unique() |> sort()) |> diff() != 1)
(Un1 |> unique() |> sort())
a2
seq_along(a2)
a1
seq_along(a2)
seq_along(a2)
rep(seq_along(a2), lengths(a2))
length(a2)
seq_along(a2)
j
profile[[j]] |> dim()
kkk <- rep(seq_along(a2), lengths(a2))
?sparseMatrix
kkk
12*39
seq_along(a2)
length(a2)
rep(1:2,5)
rep(1:2,3)
aaa <- c(1,2)
rep(a,2)
a
rep(aaa,2)
kkk
kkk[1:1000]
kkk[1:10000]
View(kkk)
kkk |> unique()
rep(aaa,200)
?rep
rep(seq_along(aaa),2)
seq_along(aaa)
seq_along(a2)
rep(seq_along(a2),1)
rep(seq_along(a2),2)
rep(seq_along(a2),length(aaa))
rep(seq_along(a2),12)
length(a2)
rep(seq_along(a2),1)
rep(seq_along(a2),39)
rep(seq_along(a2),length(a2))
rep(seq_along(a2),length(a2))
rep(seq_along(a2), lengths(a2))
class(seq_along(a2))
rep(aaa,4)
rep(aaa,each=4)
rep(aaa,4)
rep(aaa, 4)
rep(aaa, each = 4)
kkk <- matrix(0,nc=10,nr=2)
kkk
aaa <- matrix(1,nc=5,nr=2)
aaa
cbind(kkk[,1:5],aaa,kkk[6:10]
)
cbind(kkk[,1:5],aaa,kkk[,6:10])
diff(Un1)
diff(sort(unique(Un1)))
which(diff(sort(unique(Un1))) !=1)
kkk
kkk <- c(1,1,1,1,4,1,1,1)
diff
diff(kkk)
diff(kkk)!=1
kkk <- c(1,2,3,4,7,8,9,10)
diff(kkk)!=1
sum(diff(kkk)!=1)
sum(diff(kkk)!=1)!=0
which(diff(kkk)!=1)
kkk <- c(1,2,3,4,7,8,9,10,11,14,15,16,17)
which(diff(kkk)!=1)
mmm <- which(diff(kkk)!=1)
seq_along(mm)
seq_along(mmm)
seq_len(mmm)
seq_len(3)
kkk
kkk[4]
kkk[5]-kkk[4]
devtools::load_all(".")
profile[[j]] <- cbind(profile[[j]][,1:(ind_not1[[j]]-1)] , mytemp , profile[[j]][,(ind_not1[[j]]+1):ncol(profile[[j]])])
mytemp <- Matrix(0, nrow = nrow(profile[[j]]), ncol = ( sort(unique(Un1))[ind_not1[k+1]] - sort(unique(Un1))[ind_not1[k]] - 1))
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
ind_not1
diff(sort(unique(Un1)))
which(diff(sort(unique(Un1))) != 1)
sort(unique(Un1))[1114:1117]
j
profile[[j]] |> dim()
Un1 |> sort() |> unique() |> length()
rep(seq_along(a2), lengths(a2)) |> unique()
rep(seq_along(a2), lengths(a2))
rep(seq_along(a2), lengths(a2)) |> length()
Un1 |> length()
profile[[j]] |> dim()
Un1 |> unique()
Un1 |> unique() |> sort()
Un1 |> unique() |> sort() |> range()
profile[[j]] |> dim()
which((Un1 |> unique() |> sort() |> diff()) != 1)
sort(unique(Un1))
sort(unique(Un1))[1113:1117]
sort(unique(Un1))[1103:1117]
seq_along(ind_not1)
mytemp |> dim()
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
ind_not1
sort(unique(Un1))[1103:1117]
1139-1115
mytemp |> dim()
profile[[j]][,1:(ind_not1[[k]]-1)] |> dim()
dim(profile[[j]])
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
ind_not1
dim(profile[[j]])
dim(mytemp)
3729+23
profile[1:5,ind_not1[[k]]-2,ind_not1[[k]]+2]
profile[1:5,ind_not1[[k]]-2:ind_not1[[k]]+2]
profile[1:5,(ind_not1[[k]]-2):(ind_not1[[k]]+2)]
profile[1:5,(ind_not1[[k]]-2):(ind_not1[[k]]+2)]
ind_not1[[k]]-2
ind_not1[[k]]+2
profile[1:2,1:2]
profile[[j]][1:5,(ind_not1[[k]]-2):(ind_not1[[k]]+2)]
mytemp |> dim()
dim(profile[[j]])
Q
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
ncol(profile[[j]])
length(gwas$snp.pos)
min(Un1)
max(Un1)
ncol(profile[[j]])
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
j
seq_along(gwas[["caco"]])
dim(profile[[j]])
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
dim(profile[[j]])
range(Un1)
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
dim(profile[[j]])
range(Un1)
mytemp <- Matrix(0, nrow = nrow(profile[[j]]), ncol = (length(gwas$snp.pos) - max(Un1)))
mytemp |> dim()
3729+1567
ind_not1
profile[[j]]
Un1
which(profile[[j]] != 1)
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
profile[[j]] |> dim()
apply(profile[[j]],2,function(x) {y=sum(x)})
kkk <- apply(profile[[j]],2,function(x) {y=sum(x)})
kkk |> table()
range(Un1)
dim(profile[[j]])
min(Un1)
dim(profile[[j]])
length(gwas$snp.pos)
j
range(Un1)
dim(profile[[j]])
kkk <- rep(seq_along(a2), lengths(a2))
kkk
kkk |> table()
a2
a1
j
range(Un1)
min(Un1)
apply(profile[[j]][1:(min(Un1)-1)],2,sum)
apply(profile[[j]][,1:(min(Un1)-1)],2,sum)
apply(profile[[j]][,1:(min(Un1)-1)],2,sum) |> table()
range(Un1)
dim(profile]]j)
dim(profile[[j]])
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
seq_along(gwas[["caco"]])
lapply(gwas[["caco"]], length)
range(Un1)
a1
gwas$caco$cases
a1$V6
ibd
ibd$V6
ibd$V1
ibd
input
input$chr
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
lapply(values$caco,length)
ibd
unlist(unique(gwas[["caco"]]))
unlist(unique(gwas[["caco"]])) |> length()
ibd
ibd <- data.table::fread(ibd_data)
V1 <- V2 <- V3 <- V4 <- V5 <- V6 <- V7 <- V8 <- V9 <- NULL
ibd
ibd[V1 %in% unlist(unique(gwas[["caco"]]))]
ibd[V1 %in% unlist(unique(gwas[["caco"]])) & V3 %in% unlist(unique(gwas[["caco"]]))]
ibd[ V3 %in% unlist(unique(gwas[["caco"]]))]
ibd
ibd <- ibd[V1 %in% unlist(unique(gwas[["caco"]])) & V3 %in% unlist(unique(gwas[["caco"]]))]
ibd
Q
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
devtools::load_all(".")
runApp('~/Library/CloudStorage/OneDrive-MarquetteUniversity/Soroush/test/soroush_draftibd')
