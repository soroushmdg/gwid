fill = "Case_Control"
)
} else {
p <- p + ggplot2::labs(
title = title, y = "IBD Count",
fill = "Case_Control"
)
}
p <- p + ggplot2::theme(legend.title = ggplot2::element_text(size = 10)) + ggplot2::theme(
axis.ticks = ggplot2::element_line(colour = "black"),
panel.grid.major = ggplot2::element_line(
colour = "antiquewhite",
linetype = "dashed"
), panel.grid.minor = ggplot2::element_line(
colour = "antiquewhite",
linetype = "dashed"
), axis.text = ggplot2::element_text(colour = "black"),
plot.title = ggplot2::element_text(face = "bold"),
legend.title = ggplot2::element_text(size = 12),
panel.background = ggplot2::element_rect(
fill = NA,
colour = NA
),
plot.background = ggplot2::element_rect(colour = NA),
legend.key = ggplot2::element_rect(fill = NA),
legend.background = ggplot2::element_rect(fill = NA)
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(colour = NA),
plot.background = ggplot2::element_rect(colour = NA)
) +
ggplot2::scale_colour_brewer(type = "qual", palette = 2)
#p <- plotly::ggplotly(p, ...)
return(p)
}
plot_gwid <- function(x, y = NA, title = "number of IBD in each snp", plot_type = c("result_snps", "profile"), reference, ...) {
plot_type <- match.arg(plot_type)
if (plot_type == "profile") {
dots <- list(...)
invisible(ifelse("snp_start" %in% names(dots), assign("snp_start", dots[["snp_start"]]), assign("snp_start", 0)))
invisible(ifelse("snp_end" %in% names(dots), assign("snp_end", dots[["snp_end"]]), assign("snp_end", Inf)))
snp_pos_ind <- which(x$snp_pos >= snp_start & x$snp_pos <= snp_end)
z <- as.matrix(x[[which(unlist(lapply(x, inherits, "profile")))]][[reference]])[, snp_pos_ind]
z <- z[which(rowSums(z) != 0), ]
snp_pos <- x$snp_pos[snp_pos_ind]
plotly::plot_ly(x = snp_pos, z = z, type = "heatmap", colors = "Greys", showscale = FALSE) |>
plotly::layout(title = reference, xaxis = list(title = "Positions"), yaxis = list(title = "Profiles"))
} else {
if (sum(unlist(lapply(x, inherits, "result_snps"))) == 0) {
x$res <- extract(x)
}
plot_result_snps(x[[which(unlist(lapply(x, inherits, "result_snps")))]],
title = title, ...
)
}
}
df <- myregion2
df$res <- df$res[case_control %in% c("cases","cont3")]
library(paletteer)
plot(model_fisher,
y = c("cont1","cont2"),
ly=FALSE,
log_transformation = TRUE)
fishgwid <- gwid::fisher_test(ibd_data,
case_control,
reference = "cases",
snp_start = 117000000,
snp_end = 122900000)
plot(fishgwid,
y = c("cont1","cont2"),
ly=FALSE,
log_transformation = TRUE)
plot(fishgwid,
y = c("cont1"),
ly=FALSE,
log_transformation = TRUE)
plot(fishgwid,
y = c("cont1"),
ly=FALSE,
log_transformation = F)
myregion2 <- ibd_data
model_fisher <- gwid::fisher_test(ibd_data,
case_control,
reference = "cases",
snp_start = 117026294,
snp_end = 122613594)
class(model_fisher)
plot(model_fisher,
y = c("cont1","cont2"),
ly=FALSE,
log_transformation = TRUE)
plot(model_fisher,
y = c("cont1","cont2"),
QQplot = TRUE)
plot(model_fisher,
y = c("cont1","cont2"),
ly=FALSE,
log_transformation = TRUE)
plot(model_fisher,
y = c("cont1","cont2"),
QQplot = TRUE)
plot(model_fisher,
y = c("cont1","cont2"),
ly=FALSE,
log_transformation = F)
plot(model_fisher,
y = c("cont1","cont2"),
ly=FALSE,
log_transformation = TRUE)
myregion2 <- ibd_data
khelt <- myregion2$res[case_control %in% c("cases","cont1","cont2","cont3")]
khelt1 <- khelt[snp_pos > 118328849 & snp_pos < 122328849]
p <- khelt %>% ggplot2::ggplot(ggplot2::aes(x = snp_pos, y = value)) +
ggplot2::geom_line(ggplot2::aes(color = case_control), size = .6) +
ggplot2::scale_x_continuous("snp position",
labels = paste0(round(quantile(khelt$snp_pos, seq(0, 1, length.out = 5)) / 10^6), "M"),
breaks = quantile(khelt$snp_pos, seq(0, 1, length.out = 5))
)
library(tidyverse)
p <- khelt %>% ggplot2::ggplot(ggplot2::aes(x = snp_pos, y = value)) +
ggplot2::geom_line(ggplot2::aes(color = case_control), size = .6) +
ggplot2::scale_x_continuous("snp position",
labels = paste0(round(quantile(khelt$snp_pos, seq(0, 1, length.out = 5)) / 10^6), "M"),
breaks = quantile(khelt$snp_pos, seq(0, 1, length.out = 5))
)
p <- p + ggplot2::labs(
y = "count",
fill = "case_control",
title = "a) IBD count in whole chr3"
)
p
p <- p + ggplot2::theme(legend.title = ggplot2::element_text(size = 10)) + ggplot2::theme(
axis.ticks = ggplot2::element_line(colour = "black"),
panel.grid.major = ggplot2::element_line(
colour = "antiquewhite",
linetype = "dashed"
), panel.grid.minor = ggplot2::element_line(
colour = "antiquewhite",
linetype = "dashed"
), axis.text = ggplot2::element_text(colour = "black"),
plot.title = ggplot2::element_text(face = "bold"),
legend.title = ggplot2::element_text(size = 12),
panel.background = ggplot2::element_rect(
fill = NA,
colour = NA
),
plot.background = ggplot2::element_rect(colour = NA),
legend.key = ggplot2::element_rect(fill = NA),
legend.background = ggplot2::element_rect(fill = NA)
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(colour = NA),
plot.background = ggplot2::element_rect(colour = NA)
) +
ggplot2::scale_colour_brewer(type = "qual", palette = 2)
p
p1 <- khelt1 %>% ggplot2::ggplot(ggplot2::aes(x = snp_pos, y = value)) +
ggplot2::geom_line(ggplot2::aes(color = case_control), size = .6) +
ggplot2::scale_x_continuous("snp position",
labels = paste0(round(quantile(khelt1$snp_pos, seq(0, 1, length.out = 5)) / 10^6), "M"),
breaks = quantile(khelt1$snp_pos, seq(0, 1, length.out = 5))
)
p1 <- p1+ ggplot2::labs(
y = "count",
fill = "case_control",
title = "b) IBD count in chr3 signal region"
)
p1
p1 <- p1 + ggplot2::theme(legend.title = ggplot2::element_text(size = 10)) + ggplot2::theme(
axis.ticks = ggplot2::element_line(colour = "black"),
panel.grid.major = ggplot2::element_line(
colour = "antiquewhite",
linetype = "dashed"
), panel.grid.minor = ggplot2::element_line(
colour = "antiquewhite",
linetype = "dashed"
), axis.text = ggplot2::element_text(colour = "black"),
plot.title = ggplot2::element_text(face = "bold"),
legend.title = ggplot2::element_text(size = 12),
panel.background = ggplot2::element_rect(
fill = NA,
colour = NA
),
plot.background = ggplot2::element_rect(colour = NA),
legend.key = ggplot2::element_rect(fill = NA),
legend.background = ggplot2::element_rect(fill = NA)
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(colour = NA),
plot.background = ggplot2::element_rect(colour = NA)
) +
ggplot2::scale_colour_brewer(type = "qual", palette = 2)
print(p)
p
p1
fishgwidwh <- gwid::fisher_test(myregion2,caco = caco, reference = "cases")
plot_result_snps <- function(x, y = NA, title, snp_start, snp_end, ...) {
snp_pos <- value <- NULL
if (!missing(snp_start) & !missing(snp_end)) {
x <- x[snp_pos >= snp_start & snp_pos <= snp_end]
}
if (!missing(snp_start) & missing(snp_end)) {
x <- x[snp_pos >= snp_start]
}
if (missing(snp_start) & !missing(snp_end)) {
x <- x[snp_pos <= snp_end]
}
#browser()
p <- ggplot2::ggplot(x, ggplot2::aes(x = snp_pos, y = value)) +
ggplot2::geom_line(ggplot2::aes(color = case_control), linewidth = 2) +
ggplot2::scale_x_continuous("SNP Position",
labels = paste0(round(quantile(x$snp_pos, seq(0, 1, length.out = 7)) / 10^6), "M"),
breaks = quantile(x$snp_pos, seq(0, 1, length.out = 7))
)
if (missing(title)) {
p <- p + ggplot2::labs(
y = "IBD count",
fill = "Case_Control"
)
} else {
p <- p + ggplot2::labs(
title = title, y = "IBD Count",
fill = "Case_Control"
)
}
p <- p + ggplot2::theme(legend.title = ggplot2::element_text(size = 10)) + ggplot2::theme(
axis.ticks = ggplot2::element_line(colour = "black"),
panel.grid.major = ggplot2::element_line(
colour = "antiquewhite",
linetype = "dashed"
), panel.grid.minor = ggplot2::element_line(
colour = "antiquewhite",
linetype = "dashed"
), axis.text = ggplot2::element_text(colour = "black"),
plot.title = ggplot2::element_text(face = "bold"),
legend.title = ggplot2::element_text(size = 12),
panel.background = ggplot2::element_rect(
fill = NA,
colour = NA
),
plot.background = ggplot2::element_rect(colour = NA),
legend.key = ggplot2::element_rect(fill = NA),
legend.background = ggplot2::element_rect(fill = NA)
) +
ggplot2::theme(
panel.background = ggplot2::element_rect(colour = NA),
plot.background = ggplot2::element_rect(colour = NA)
) +
ggplot2::scale_colour_brewer(type = "qual", palette = 2)
#p <- plotly::ggplotly(p, ...)
return(p)
}
plot_gwid <- function(x, y = NA, title = "number of IBD in each snp", plot_type = c("result_snps", "profile"), reference, ...) {
plot_type <- match.arg(plot_type)
if (plot_type == "profile") {
dots <- list(...)
invisible(ifelse("snp_start" %in% names(dots), assign("snp_start", dots[["snp_start"]]), assign("snp_start", 0)))
invisible(ifelse("snp_end" %in% names(dots), assign("snp_end", dots[["snp_end"]]), assign("snp_end", Inf)))
snp_pos_ind <- which(x$snp_pos >= snp_start & x$snp_pos <= snp_end)
z <- as.matrix(x[[which(unlist(lapply(x, inherits, "profile")))]][[reference]])[, snp_pos_ind]
z <- z[which(rowSums(z) != 0), ]
snp_pos <- x$snp_pos[snp_pos_ind]
plotly::plot_ly(x = snp_pos, z = z, type = "heatmap", colors = "Greys", showscale = FALSE) |>
plotly::layout(title = reference, xaxis = list(title = "Positions"), yaxis = list(title = "Profiles"))
} else {
if (sum(unlist(lapply(x, inherits, "result_snps"))) == 0) {
x$res <- extract(x)
}
plot_result_snps(x[[which(unlist(lapply(x, inherits, "result_snps")))]],
title = title, ...
)
}
}
df <- myregion2
df$res <- df$res[case_control %in% c("cases","cont3")]
library(paletteer)
library(ggplot2)
library(ggsci)
plot_gwid(df,title = "")+#,snp_start = 117000000,snp_end = 122900000) +
scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
myregion2
fishgwid <- gwid::fisher_test(ibd_data,caco = case_control,snp_start = 117000000,snp_end = 122900000,reference = "cases")
plot(fishgwid)
class(fishgwid)
fishgwid
fishgwid2 <- fishgwid[case_control == "case1"]
class(fishgwid2)
plot(fishgwid2)
fishgwid2 <- fishgwid[case_control == "cont1"]
plot(fishgwid2)
plot(fishgwid2,log_transformation = F)
plot(fishgwid,log_transformation = F)
fishgwid2 <- fishgwid[case_control %in% c("cont1","cont2","cont3")]
plot(fishgwid2)
plot(fishgwid2,log_transformation = F)
fishgwid2
fishgwid2$value |> range()
fishgwid3 <- fishgwid[case_control %in% c("cont1")]
fishgwid3
plot(fishgwid3)
plot(fishgwid3,log_transformation = F)
plot(fishgwid3,log_transformation = F,ly = F)
plot(fishgwid3,log_transformation = F,ly = F) + scale_y_log10()
plot(fishgwid3,log_transformation = T,ly = F) + scale_y_log10()
plot(fishgwid3,log_transformation = F,ly = F) + scale_y_log10()
plot(fishgwid3,log_transformation = F,ly = T) +  scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = F,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Case","Control"))
plot(fishgwid3,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Case","Control"))
plot(fishgwid3,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Case","Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = F,ly = T) +  scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Case","Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
library(paletteer)
library(ggplot2)
library(ggsci)
plot(fishgwid3,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
fishgwid2 <- fishgwid[case_control %in% c("cont1","cont2")]
plot(fishgwid2,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8)) +
ggplot2::scale_colour_brewer(type = "qual", palette = 2)
plot(fishgwid2,log_transformation = T,ly = T) +  scale_color_jama(name = "Case_Control",labels = c("Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid2,log_transformation = T,ly = T) +  scale_color_jama(name = "Case_Control",labels = c("Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) +  scale_color_jama(name = "Case_Control",labels = c("Control")) +   theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8)) +
ggplot2::scale_colour_brewer(type = "qual", palette = 2)
plot(fishgwid3,log_transformation = T,ly = F) +
scale_color_jama(name = "Case_Control",labels = c("Control")) +
theme(legend.key.height= unit(1, 'cm'),
legend.text = element_text(size=13),
legend.title = element_text(size=15))
plot(fishgwid3,log_transformation = T,ly = F) + scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) + scale_color_jama(name = "Case_Control",labels = c("Case","Control"),value = "red")  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
fishgwid3
plot(fishgwid3,log_transformation = T,ly = F) + scale_color_jama(name = "Case_Control",labels = c("Case","Control"),levels = "cont1")  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) + scale_color_jama(name = "Case_Control",labels = c("Control","Case"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid2,log_transformation = T,ly = F) + scale_color_jama(name = "Case_Control",labels = c("Control","Case"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid2,log_transformation = T,ly = F) + scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid2,log_transformation = T,ly = F,y = "cont1") + scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid2,log_transformation = T,ly = F,y = "cont2") + scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid2,log_transformation = T,ly = F,y = "cont1") + scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) + scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
jamma_colors
ggsci::pal_jama()
?ggsci::pal_jama
scales::show_col(show_col(pal_jama("default")(7))
1
library("scales")
show_col(pal_jama("default")(7))
show_col(pal_jama("default", alpha = 0.6)(7))
plot(fishgwid3,log_transformation = T,ly = F) + scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
scale_color_manual(values = "#DF8F44FF") +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) + #scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
scale_color_manual(name = "Case_Control",labels = c("Case","Control"),values = "#DF8F44FF") +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot_gwid(df,title = "")+#,snp_start = 117000000,snp_end = 122900000) +
scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F,size = 2) + #scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
scale_color_manual(name = "Case_Control",labels = c("Case","Control"),values = "#DF8F44FF") +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3,log_transformation = T,ly = F) + #scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
scale_color_manual(name = "Case_Control",labels = c("Case","Control"),values = "#DF8F44FF") +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
update_geom_defaults("line", list(size = 2))
plot(fishgwid3,log_transformation = T,ly = F) + #scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
scale_color_manual(name = "Case_Control",labels = c("Case","Control"),values = "#DF8F44FF") +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
update_geom_defaults("line", list(size = 2))
plot(fishgwid3,log_transformation = T,ly = F) + #scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
scale_color_manual(name = "Case_Control",labels = c("Case","Control"),values = "#DF8F44FF") +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
update_geom_defaults()
?update_geom_defaults
plot(fishgwid3,log_transformation = T,ly = F,line_size = 2) + #scale_color_jama(name = "Case_Control",labels = c("Case","Control"))  +
scale_color_manual(name = "Case_Control",labels = c("Case","Control"),values = "#DF8F44FF") +
theme(legend.key.height= unit(1, 'cm'),legend.text = element_text(size=13),legend.title = element_text(size=15),
axis.text.x=element_text(size=13),axis.text.y=element_text(size=13),
axis.title.x=element_text(size=15),axis.title.y=element_text(size=15),
legend.position = c(.11,.8))
plot(fishgwid3)
plot(fishgwid3,log_transformation = F)
plot(fishgwid3,log_transformation = F) +  scale_y_log10()
?scale_y_log10
plot(fishgwid3,log_transformation = F,ly=F) +  scale_y_log10()
plot(fishgwid3,log_transformation = F,ly=F)
plot(fishgwid3,log_transformation = F,ly=F) +  scale_y_log10()
plot(fishgwid3,log_transformation = F,ly=F)
plot(fishgwid3,log_transformation = F)
plot(fishgwid3,log_transformation = F)
plot(fishgwid3,log_transformation = F)
plot(fishgwid3,log_transformation = F)
plot(fishgwid3,log_transformation = T)
plot(fishgwid3,log_transformation = F)
library(gwid)
library(gwid)
devtools::check_mac_release()
devtools::check_win_release()
getwd()
usethis::use_github_release()
usethis::use_dev_version()
library(gwid)
devtools::check_win_release()
devtools::check_mac_release()
usethis::use_version('minor')
pkgbuild::build(clean_doc = )
library(gwid)
devtools::check_win_release()
devtools::submit_cran()
