use_r("strsplit1")
#> • Edit 'R/strsplit1.R'
#> • Call `use_test()` to create a mat
use_r("strsplit1")
#> • Edit 'R/strsplit1.R'
#> • Call `use_test()` to create a mat
use_r("strsplit1")
#> • Edit 'R/strsplit1.R'
#> • Call `use_test()` to create a mat
library(devtools)
library(usethis)
load_all()
check()
use_mit_license()
check()
check()
?importFrom
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
load_all()
load_all()
check()
load_all()
check()
load_all()
check()
class(a1)
khelt <- function(x,...){
UseMethod("khelt")
}
khelt.bb <- function(x,y){
x+y
}
a1 <- c(1,2,3)
class(a1)
a1 <- list(1,2,3)
class(a1)
unlist(a1)
class(a1)
class(a1) <- "bb"
class(a1)
khelt(x = a1,a1)
khelt.bb(x = a1,a1)
khelt.bb(a1,a1)
khelt.bb(a1,a1)
unlist(a1)+unlist(a1)
khelt(a1,a1)
khelt.bb <- function(x,y,..){
unlist(x)+unlist(y)
}
a1 <- list(1,2,3)
class(a1) <- "bb"
khelt(a1,a1)
khelt.bb <- function(x,y){
unlist(x)+unlist(y)
}
a1 <- list(1,2,3)
class(a1) <- "bb"
khelt(a1,a1)
khelt <- function(x,...){
UseMethod("khelt")
}
khelt.bb <- function(x,y){
unlist(x)+unlist(y)
}
a1 <- list(1,2,3)
class(a1) <- "bb"
khelt(a1,a1)
khelt(x=a1,a1)
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
load_all()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
library(devtools)
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
methods::as()
methods::as
?methods::as
?as.matrix
?methods::as
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
plot
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
library(gwid)
library(devtools)
load_all()
check()
?ChAMP::champ.norm
library(devtools)
load_all()
check()
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/test")
printList <- function(list, n = length(list), hn = 6) {
for (item in 1:n) {
cat("\t", names(list[item]), ":\t")
print(class(list[[item]]))
}
}
caco <- gwid::case_control(case_control_rda = "../test/case-cont-RA.withmap.Rda")
caco <- gwid::case_control(case_control_rda = "../test/case-cont-RA.withmap.Rda")
caco$cases
check()
library(devtools)
load_all()
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/gwid/R")
load_all()
check()
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/test")
caco <- gwid::case_control(case_control_rda = "../test/case-cont-RA.withmap.Rda")
class(caco)
pieces <- gwid::build_gwas(gds_data = "../test/chr3.gds",caco = caco,gwas_generator = TRUE)
class(pieces)
pieces
pieces <- gwid::build_gwas(gds_data = "../test/chr22.gds",caco = caco,gwas_generator = TRUE)
class(pieces)
pieces |> methods()
attributes(pieces)
names(pieces)
pieces[[1]]
names(pieces)
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/gwid/R")
load_all()
check()
print(pieces)
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/test")
ag.pieces <- gwid::extract(pieces)
class(ag.pieces)
myphase <- gwid::build_phase(phased_vcf = "../test/chr22.vcf",caco = caco)
myregion2 <- gwid::build_gwid(ibd_data = "../test/chr22.ibd",gwas = pieces)
myregion2$ibd
paste0("V",1:9)
names(pieces)
class(pieces)
names(pieces)[1:6]
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/gwid/R")
load_all()
check()
kkk <- copy(myregion2$ibd)
kkk
setkey(kkk,V1)
setkey(kkk,V6,V7)
kkk
setkey(kkk,"V6","V7")
kkk
setkey(kkk,"V9")
kkk
library(plotly)
setwd("C:/Users/soroush/OneDrive - Marquette University/marquette courses/spring 2023")
colnames(myregion2$ibd)
colnames(myregion2$ibd) |> quote()
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/gwid/R")
load_all()
check()
load_all()
check()
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/test")
caco <- gwid::case_control(case_control_rda = "../test/case-cont-RA.withmap.Rda")
class(caco)
pieces <- gwid::build_gwas(gds_data = "../test/chr22.gds",caco = caco,gwas_generator = TRUE)
class(pieces)
ag.pieces <- gwid::extract(pieces)
ag.pieces$snp_pos
ag.pieces$case_control
ag.pieces
myphase <- gwid::build_phase(phased_vcf = "../test/chr22.vcf",caco = caco)
myregion2 <- gwid::build_gwid(ibd_data = "../test/chr22.ibd",gwas = pieces)
myregion2$ibd
myregion2$res
myregion2$IND$cases
myregion2$snp_pos
load_all()
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/gwid/R")
load_all()
check()
kkk
kkk[["V1"]]
kkk$V1
load_all()
check()
load_all()
check()
load_all()
check()
?fisher.test
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/test")
printList <- function(list, n = length(list), hn = 6) {
for (item in 1:n) {
cat("\t", names(list[item]), ":\t")
print(class(list[[item]]))
}
}
caco <- gwid::case_control(case_control_rda = "../test/case-cont-RA.withmap.Rda")
class(caco)
pieces <- gwid::build_gwas(gds_data = "../test/chr22.gds",caco = caco,gwas_generator = TRUE)
class(pieces)
printList(pieces)
print(pieces,quote = T)
which(unlist(lapply(pieces, inherits,"result_snps")))
plot(pieces,title = "gwas plot")
plot(pieces,title = "gwas plot",snp_start = 31833022,snp_end = 33371722)
ag.pieces <- gwid::extract(pieces)
ag.pieces_filter <- gwid::extract(pieces,type = "snps",snp_start = 31833022,snp_end = 33371722)
class(ag.pieces)
printList(ag.pieces)
plot(ag.pieces,title = "another gwas")
plot(ag.pieces,title = "another gwas",snp_start = 31833022,snp_end = 33371722)
plot(ag.pieces_filter)
myphase <- gwid::build_phase(phased_vcf = "../test/chr22.vcf",caco = caco)
class(myphase)
printList(myphase)
myregion2 <- gwid::build_gwid(ibd_data = "../test/chr22.ibd",gwas = pieces)
class(myregion2)
printList(myregion2)
plot(myregion2,title = "gwid",plot_type = "result_snps")
plot(myregion2,title = "gwid",plot_type = "result_snps",snp_start = 31833022,snp_end = 33371722)
plot(myregion2,plot_type = "profile",reference = "case1")
gwid_permutation <- permutation_test(myregion2,gwas = pieces,snp_start = 31833022,snp_end = 33371722,nperm = 10^2,reference = "cases",ibd_data =  "../test/chr3.ibd")
gwid_permutation <- permutation_test(myregion2,gwas = pieces,snp_start = 31833022,snp_end = 33371722,nperm = 10^2,reference = "cases",ibd_data =  "../test/chr22.ibd")
gwid_temp <- gwid::extract(myregion2) # also inculde in myregion2
gwid_temp_filter <- gwid::extract(myregion2,snp_start = 31833022,snp_end = 33371722)
class(gwid_temp)
plot(gwid_temp)
plot(gwid_temp_filter)
plot(gwid_temp,snp_start = 31833022,snp_end = 33371722)
mygwid_win <- gwid::extract_window(myregion2,w = 10,snp_start = 31833022,snp_end = 33371722)
class(mygwid_win)
plot(mygwid_win,title = "gwid subset")
plot(mygwid_win,title = "gwid subset",snp_start = 32833022,snp_end = 33371722)
myfishertest_resultsnps <- gwid::fisher_test(mygwid_win,caco,reference = "cases")
class(myfishertest_resultsnps)
plot(myfishertest_resultsnps)
plot(myfishertest_resultsnps,snp_start = 32833022,snp_end = 33371722)
#myprofile_without_selection <- gwid::subset(myregion2)
myprofile_without_selection2 <- gwid::subset(myregion2,snp_start = pieces$snp.pos[1],snp_end = pieces$snp.pos[length(pieces$snp.pos)])
myprofile <- gwid::subset(myregion2,snp_start = 31833022,snp_end = 33371722)
class(myprofile)
printList(myprofile)
plot(myprofile)
plot(myprofile,plot_type = "profile",reference = "cases")
plot(myprofile,plot_type = "profile",reference = "cases",snp_start = 31833022,snp_end = 33371722)
plot(myprofile,plot_type = "profile",reference = "cases",snp_start = 32833022,snp_end = 33371722)
plot(myprofile_without_selection,reference = "cases",plot_type = "profile")
fishgwas <- gwid::fisher_test(pieces,reference = "cases",snp_start = 31833022,snp_end = 33371722,alternative = "two.sided")
class(fishgwas)
plot(fishgwas,title = "test_snps")
plot(fishgwas,title = "test_snps",snp_start = 32833022,snp_end = 33371722)
fishgwid <- gwid::fisher_test(myregion2,caco = caco,snp_start = 31833022,snp_end = 33371722,reference = "cases")
class(fishgwid)
plot(fishgwid)
plot(fishgwid,snp_start = 32833022,snp_end = 33371722)
fishgwid_permu <- gwid::fisher_test_permut(myregion2, gwas = pieces,snp_start = 31833022,snp_end = 33371722,reference = "cases",nperm = 50,ibd_data = "../test/chr3.ibd")
fishgwid_permu <- gwid::fisher_test_permut(myregion2, gwas = pieces,snp_start = 31833022,snp_end = 33371722,reference = "cases",nperm = 50,ibd_data = "../test/chr22.ibd")
hap_str <- gwid::haplotype_structure(myregion2,phase = myphase,w = 10,snp_start = 31833022,snp_end = 33371722)
class(hap_str)
printList(hap_str)
myhapfreq <- gwid::haplotype_frequency(hap_str)
class(myhapfreq)
printList(myhapfreq)
plot(myhapfreq,plot_type = "result_snps",title = "hap most freq")
plot(myhapfreq,plot_type = "haplotype_structure_frequency",nwin = 1,type = "version2")
mygtest <- gwid::gtest(hap_str,reference = "cases")
class(mygtest)
plot(mygtest,title = "gtest")
plot(mygtest,title = "gtest",snp_start = 32833022,snp_end = 33371722)
myroh <- gwid::roh(myphase,gwas = pieces,w = 10,fun = "sum",snp_start = 31833022,snp_end = 33371722)
class(myroh)
printList(myroh)
plot(myroh,"roh")
plot(myroh,"roh",snp_start = 32833022,snp_end = 33371722)
myroh_mat <- roh(myphase,gwas = pieces,w = 10,fun = "sum",snp_start = 31833022,snp_end = 33371722,roh_mat = T)
mymcnemar <- mcnemar_test(myroh,reference = "cases",w = 10) #myroh should use fun=sum  # Also not correct we have p values more than 1
class(mymcnemar)
plot(mymcnemar)
mcnemar_perm <- mcnemar_test_permut(mymcnemar,roh_mat = myroh_mat,gwas = pieces,nperm = 100,reference = "cases",w = 10)
plot(mcnemar_perm)
hap_str_gwas <- haplotype_structure(pieces,phase = myphase,w = 10,snp_start = 31833022,snp_end = 33371722)
class(hap_str_gwas)
printList(hap_str_gwas)
myhapfreqgwas <- haplotype_frequency(hap_str_gwas)
class(myhapfreqgwas)
printList(myhapfreqgwas)
load_all()
setwd("C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/gwid/R")
load_all()
check()
plot(myprofile,plot_type = "profile",reference = "cases",snp_start = 31833022,snp_end = 33371722)
plot(myprofile,plot_type = "profile",reference = "cases",snp_start = 32833022,snp_end = 33371722)
plot(mygwid_win,title = "gwid subset",snp_start = 32833022,snp_end = 33371722)
load_all()
check()
load_all()
check()
library(gwid)
library(gwid)
load_all()
check()
load_all()
library(gwid)
library(gwid)
library(devtools)
library(gwid)
check()
library(devtools)
load_all()
check()
library(gwid)
library(gwid)
load_all()
check()
getwd()
library(devtools)
library(gwid)
check()
load_all()
check()
load_all()
check()
shiny::runApp('C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/test/soroush_draftibd')
runApp('C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/test/soroush_draftibd')
runApp('C:/Users/soroush/Marquette University/Maadooliat, Mehdi - Soroush/test/soroush_draftibd')
use_r("case_control")
styler::style_pkg()
library(devtools)
use_r("case_contrl")
load_all()
check()
load_all()
use_r("build")
styler:::style_selection()
load_all()
check()
use_r("extract")
load_all()
load_all()
check()
use_r("fisher_test")
load_all()
check()
use_r("haplotype_structure")
load_all()
check()
use_r("roh")
styler:::style_selection()
styler:::style_selection()
use_r("plot")
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
load_all()
load_all()
check()
install.packages(c("ade4", "ape", "BiasedUrn", "BiocManager", "blob", "broom", "cachem", "checkmate", "cli", "ClusterR", "colorspace", "commonmark", "cutoff", "data.table", "dbplyr", "deldir", "dendextend", "distr", "dplyr", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "fontawesome", "Formula", "fs", "gargle", "ggbeeswarm", "ggplot2", "gh", "gmp", "googledrive", "googlesheets4", "gt", "gtable", "haven", "hexbin", "Hmisc", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "interp", "jsonlite", "kernlab", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "mice", "modelr", "multcomp", "mvtnorm", "NMF", "openssl", "packrat", "pillar", "plotly", "processx", "profvis", "ps", "quantreg", "Rcpp", "RcppArmadillo", "RCurl", "readr", "readxl", "reticulate", "rlang", "rmarkdown", "RSQLite", "sass", "segmented", "sfsmisc", "sn", "sourcetools", "sp", "styler", "sys", "testthat", "TH.data", "tibble", "tictoc", "tidyr", "tidyverse", "tinytex", "tree", "truncnorm", "tzdb", "utf8", "V8", "vcd", "vctrs", "VGAM", "viridis", "viridisLite", "vroom", "waldo", "xfun", "XML", "xml2", "zip", "zoo"))
